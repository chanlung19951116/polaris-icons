$LOAD_PATH.unshift(File.join(__dir__, "lib"))

require 'fileutils'
require "bundler/gem_tasks"
require 'polaris_icons'

task :default => :spec

desc "Converts and copies the Polaris icons to be vendored in the Gem"
task :convert_and_copy_gem_icons do
  convert_and_copy_gem_icons
end

def convert_and_copy_gem_icons
  generate_icons

  # Paths
  svg_path = File.join(__dir__, "images/svg")
  pdf_path = File.join(__dir__, "images/pdf")
  asset_catalogs_path = File.join(__dir__, "images/asset_catalogs")

  FileUtils.mkdir_p(svg_path)
  FileUtils.mkdir_p(pdf_path)
  FileUtils.rm_r(asset_catalogs_path, force: true)
  FileUtils.mkdir_p(asset_catalogs_path)

  # Copy
  asset_catalog = PolarisIcons::AssetCatalog.new
  Dir.glob(File.join(root_path, "packages/polaris-icons/images/*.svg")).each do |path|
    # SVG
    output_svg_path = File.join(svg_path, File.basename(path))
    FileUtils.cp(path, output_svg_path)
    puts "Copied to #{output_svg_path}"

    # PDF
    output_pdf_path = File.join(pdf_path, File.basename(path).gsub(".svg", ".pdf"))
    asset_catalog.add_pdf(output_pdf_path)
    system(
      "rsvg-convert",
      "-f", "pdf",
      "-o", output_pdf_path,
      path
    ) || abort
    puts "Copied to #{output_pdf_path}"
  end
  asset_catalog.write(asset_catalogs_path)
end


def generate_icons
  system(
    "yarn",
    "workspace", "@shopify/polaris-icons",
    "--cwd", root_path,
    "run", "build"
  ) || abort
end

def root_path
  @root_path ||= File.expand_path("../..", __dir__)
end
